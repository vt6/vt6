#!/usr/bin/perl

use strict;
use warnings;
use v5.20;

die "usage: $0 [square|plain|wide]" if @ARGV != 1 or $ARGV[0] !~ /^(?:square|plain|wide)$/;

my @pattern = $ARGV[0] eq 'square' ? (
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [2,2,1,1,2,2,1,2,2,2,2,2,2,1,1,1,],
  [2,2,1,1,2,2,1,2,2,2,2,2,2,1,1,1,],
  [2,2,1,1,2,2,1,1,1,2,2,1,1,3,3,1,],
  [2,2,1,1,2,2,1,1,1,2,2,1,3,1,1,1,],
  [2,2,1,1,2,2,1,1,1,2,2,1,3,3,3,1,],
  [2,2,1,1,2,2,1,1,1,2,2,1,3,1,1,3,],
  [1,2,2,2,2,1,1,1,1,2,2,1,3,1,1,3,],
  [1,1,2,2,1,1,1,1,1,2,2,1,1,3,3,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
) : $ARGV[0] eq 'plain' ? (
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
) : (
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,2,2,1,1,2,2,1,2,2,2,2,2,2,1,1,3,3,3,3,1,1,1,],
  [1,1,2,2,1,1,2,2,1,2,2,2,2,2,2,1,3,3,1,1,3,3,1,1,],
  [1,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,3,3,1,1,1,1,1,1,],
  [1,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,3,3,3,3,3,1,1,1,],
  [1,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,3,3,1,1,3,3,1,1,],
  [1,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,3,3,1,1,3,3,1,1,],
  [1,1,1,2,2,2,2,1,1,1,1,2,2,1,1,1,3,3,1,1,3,3,1,1,],
  [1,1,1,1,2,2,1,1,1,1,1,2,2,1,1,1,1,3,3,3,3,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
  [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,],
);

my @colors = (
  # background (#000)
  '0 0 0 ',
  # mute foreground (#333)
  '51 51 51 ',
  # actual foreground (#FFF and #0F0)
  '255 255 255 ',
  '0 255 0 ',
);

my $step = 16;
my $size = 10;

my $offset      = int(($step - $size) / 2);
my $full_width  = scalar(@{$pattern[0]}) * $step;
my $full_height = scalar(@pattern) * $step;

say "P3 $full_width $full_height 255\n";

for my $p_row (@pattern) {
  for my $row (0..($step - 1)) {
    if ($row < $offset or $row >= $offset + $size) {
      say $colors[0] x $full_width;
    }
    else {
      for my $pixel (@$p_row) {
        print $colors[0] x $offset . $colors[$pixel] x $size . $colors[0] x $offset;
      }
      print "\n";
    }
  }
}

=for comment

say '<?xml version="1.0" standalone="no"?>';
say '<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">';
say qq'<svg viewBox="0 0 $full_width $full_height" version="1.1">';

# background layer
say qq'<rect x="0" y="0" width="$full_width" height="$full_height" fill="$colors[0]" />';

for my $ix (0..$#{$pattern[0]}) { for my $iy (0..$#pattern) {
  my $x0 = $ix * $step + $offset;
  my $y0 = $iy * $step + $offset;
  say qq'<rect x="$x0" y="$y0" width="$size" height="$size" fill="$colors[$pattern[$iy][$ix]]" />';
}}

say '</svg>';

=cut
